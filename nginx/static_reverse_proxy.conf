server {
	server_name something.in www.something.in;
	root /var/www/surveyui/build;
	index index.html;

    # This sets up nginx to replace parts of our JS code with environment
    # variables injected into the container. This allows us to run the same
    # code in different environments.
    # The sub filter is used in CI to set up all the environment variables
    # configured in manifold.
    location ~* ^.+\.js$ {
        #LOCATION_SUB_FILTER
        sub_filter_once off;
        sub_filter_types *;
    }

    # Health check endpoint. This will be used by kubernetes to determine if the
    # container is ready/alive.
    #location = /_healthz {
    #    return 200 'OK';
    #}
    
    #Redirecting for apis
	location /api {
        proxy_pass http://127.0.0.1:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    

    # Force all paths to load either itself (js files) or go through index.html.
    location / {
        try_files $uri $uri/ /index.html;
    }
    
}


server {
	server_name edu.something.in www.edu.something.in;
	root /var/www/surveyui/build;
	index index.html;

    # This sets up nginx to replace parts of our JS code with environment
    # variables injected into the container. This allows us to run the same
    # code in different environments.
    # The sub filter is used in CI to set up all the environment variables
    # configured in manifold.
    location ~* ^.+\.js$ {
        #LOCATION_SUB_FILTER
        sub_filter_once off;
        sub_filter_types *;
    }

    # Health check endpoint. This will be used by kubernetes to determine if the
    # container is ready/alive.
    #location = /_healthz {
    #    return 200 'OK';
    #}
    
    #Redirecting for apis
	location /api {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    

    # Force all paths to load either itself (js files) or go through index.html.
    location / {
        try_files $uri $uri/ /index.html;
    }
    
}


